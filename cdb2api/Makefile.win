!IF "$(OS)" == "Windows_NT"
NULL=
!ELSE
NULL=nul
!ENDIF

!IF "$(PREFIX)" == ""
PREFIX="%ProgramFiles%\\cdb2api"
!ENDIF

CFLAGS_DEF=
CFLAGS_INC=

#OPENSSL_INC=R:\include
#OPENSSL_LIB=C:\Program Files (x86)\GnuWin32\lib

!IF "$(OPENSSL_INC)" == ""
CFLAGS_DEF=/DWITH_SSL=0
!ELSEIF "$(OPENSSL_LIB)" == ""
CFLAGS_DEF=/DWITH_SSL=0
!ELSE
!MESSAGE USING OPENSSL INCLUDE DIRECTORY $(OPENSSL_INC)
!MESSAGE USING OPENSSL LIBRARY DIRECTORY $(OPENSSL_INC)
CFLAGS_DEF=$(CFLAGS_DEF) /DWITH_SSL=1
CFLAGS_INC=$(CFLAGS_INC) /I"$(OPENSSL_INC)"
!ENDIF


# HOME
#PROTOC_INC=C:\Program1\include
#PROTOC_LIB=C:\Program1\lib
#PROTOC_BIN=C:\Program1\bin
# OFFICE
PROTOC_INC=C:\Program Files (x86)\include
PROTOC_LIB=C:\Program Files (x86)\lib
PROTOC_BIN=C:\Program Files (x86)\bin

!IF "$(PROTOC_INC)" == ""
!ERROR MISSING PROTOC INCLUDE DIRECTORY
!ELSEIF "$(PROTOC_LIB)" == ""
!ERROR MISSING PROTOC LIBRARY DIRECTORY
!ELSEIF "$(PROTOC_BIN)" == ""
!ERROR MISSING PROTOC BIN DIRECTORY
!ELSE
!MESSAGE USING PROTOC INCLUDE DIRECTORY $(PROTOC_INC)
!MESSAGE USING PROTOC LIBRARY DIRECTORY $(PROTOC_LIB)
!MESSAGE USING PROTOC BINARY DIRECTORY $(PROTOC_BIN)
CFLAGS_INC=$(CFLAGS_INC) /I"$(PROTOC_INC)"
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG="Release"
CFLAG_CFG=/MD /O2 /W4 /wd4127 /wd4201 /wd4100 /wd4057
!ELSE
CFLAG_CFG=/MDd /Zi /Od /W4 /wd4127 /wd4201
!ENDIF

CFLAGS_INC=/I../bbinc /I../bb $(CFLAGS_INC)
CFLAGS_DEF=$(CFLAGS_DEF) -DSBUF2_SERVER=0

CC=cl.exe
CFLAGS=/nologo $(CFLAG_CFG) $(CFLAGS_INC) $(CFLAGS_DEF) /c

#/LIBPATH cdb2.lib
#/DelayLoad:$(SSL_DLL)

DLL=cdb2api.dll
LD=link.exe /DLL
LDLIBS=kernel32.lib uuid.lib wsock32.lib ws2_32.lib msvcrt.lib protobuf-c.lib /nodefaultlib:libcmt.lib

## Quick and dirty
LDLIBPATH=
LDLIBPATH=/LIBPATH:"$(PROTOC_LIB)"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.10.25017\lib\onecore\x64"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.15063.0\um\x64"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.15063.0\ucrt\x64"

LDFLAGS=$(LDFLAGS) $(LDLIBS) $(LDLIBPATH)

LIB=cdb2api.lib
AR=lib.exe
ARFLAGS=

OBJECTS=sqlquery.pb-c.obj sqlresponse.pb-c.obj cdb2api.obj

.c.obj::
	$(CC) @<<
	$(CFLAGS) $<
<<

ALL: "$(LIB)" "$(DLL)"

.PHONY: ALL CLEAN PROTOC_GEN

PROTOC_GEN:
	"$(PROTOC_BIN)\protoc-c" -I..\protobuf --c_out=. ..\protobuf\sqlquery.proto
	"$(PROTOC_BIN)\protoc-c" -I..\protobuf --c_out=. ..\protobuf\sqlresponse.proto

sqlquery.pb-c.obj: PROTOC_GEN
sqlresponse.pb-c.obj: PROTOC_GEN

"$(DLL)": $(OBJECTS)
	$(LD) @<<
	$(LDFLAGS) $(OBJECTS) /pdb:$*.pdb /implib:$*.lib /out:$@
<<
	
"$(LIB)": $(OBJECTS)
	$(AR) @<<
	$(ARFLAGS) $(OBJECTS) /out:$@
<<

TEST:
	$(CC) t.c cdb2api.lib /link $(LDLIBPATH) $(LDLIBS)

CLEAN:
	-@ERASE /Q *.obj
	-@ERASE /Q *.dll
	-@ERASE /Q *.lib
	-@ERASE /Q sqlquery.pb-c.*
	-@ERASE /Q sqlresponse.pb-c.*

INSTALL:
	IF NOT EXSIT "$(PREFIX)/$(NULL)" mkdir "$(PREFIX)"
	-@COPY $(DLL) $(PREFIX)
	-@COPY $(LIB) $(PREFIX)

UNINSTALL:
	-@ERASE /Q $(PREFIX)\$(DLL)
	-@ERASE /Q $(PREFIX)\$(LIB)
	-@RD /Q $(PREFIX)
