#!/usr/bin/env bash

set -e

dbnm=$1
dbdir=${DBDIR}
bindir=`dirname $COMDB2_EXE`
total=25000
delrange=50
ndels=2000

if [ "$tier" = "" ]; then
    tier='default'
fi

echo "DBNAME is $dbnm"
echo "DBDIR is $dbdir"
echo "BIN DIR is $bindir"
echo "tier is $tier"

mynode=`hostname`
myfnode=`hostname -f`
leader=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm $tier "select host from comdb2_cluster where is_master='Y'"`

echo "I AM $mynode"
echo "LEADER is $leader"

echo '- Test 1 - Deleting all data'
cdb2sql $dbnm --host $leader - <<EOF
DROP TABLE IF EXISTS t0
CREATE TABLE t0 (i INTEGER)\$\$
INSERT INTO t0 SELECT value FROM generate_series(1, $total)
EXEC PROCEDURE sys.cmd.send('flush')
SELECT sleep(2)
EOF

echo 'check stat size before ---'
szbefore=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm $tier "SELECT bytes FROM comdb2_tablesizes WHERE tablename='t0'"`

cdb2sql $dbnm --host $leader - <<EOF
EXEC PROCEDURE sys.cmd.send('stat pgmv')
EXEC PROCEDURE sys.cmd.send('stat size')
DELETE FROM t0
EXEC PROCEDURE sys.cmd.send('flush')
SELECT '--- sleeping 2 seconds to let flush do work ---' as info
SELECT sleep(2)
EOF

nrows=`cdb2sql --tabs $dbnm --host $leader "SELECT COUNT(*) FROM t0"`
echo "# rows remaining $nrows"
sleep 10 # Allow the background thread to do work

cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send('stat pgmv')"
cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send('stat size')" 

szafter=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm $tier "SELECT bytes FROM comdb2_tablesizes WHERE tablename='t0'"`
echo "size before: $szbefore; size after: $szafter"
if [ "$szafter" != 8192 ]; then
    echo "expected only 8192 bytes for 2 pages (meta and root), instead got $szafter bytes" >&2
    exit 1
fi

echo '- Test 2 - Deleting random rows to leave holes in btree'
cdb2sql $dbnm --host $leader - <<EOF
DROP TABLE IF EXISTS t0
CREATE TABLE t0 (i INTEGER)\$\$
INSERT INTO t0 SELECT value FROM generate_series(1, $total)
EXEC PROCEDURE sys.cmd.send('flush')
SELECT sleep(2)
EOF

szbefore=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm $tier "SELECT bytes FROM comdb2_tablesizes WHERE tablename='t0'"`

for i in `seq 1 $ndels`; do
    cdb2sql ${CDB2_OPTIONS} $dbnm $tier "DELETE FROM t0 LIMIT $RANDOM%$delrange OFFSET $RANDOM%$total" >/dev/null
done

echo 'done deleting'

cdb2sql $dbnm --host $leader - <<EOF
EXEC PROCEDURE sys.cmd.send('evict_from_cache t0')
SELECT COUNT(*) FROM t0
EXEC PROCEDURE sys.cmd.send('flush')
SELECT '--- sleeping 2 seconds to let flush do work ---' as info
SELECT sleep(2)
EOF

cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send('stat pgmv')"
cdb2sql $dbnm --host $leader "EXEC PROCEDURE sys.cmd.send('stat size')" 

szafter=`cdb2sql --tabs ${CDB2_OPTIONS} $dbnm $tier "SELECT bytes FROM comdb2_tablesizes WHERE tablename='t0'"`
echo "size before: $szbefore; size after: $szafter"
if [ $szafter -ge $szbefore ]; then
    echo "expected reduced table size" >&2
    exit 1
fi
