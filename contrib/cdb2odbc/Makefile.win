# HOME
PROTOC_INC=C:\Program1\include
PROTOC_LIB=C:\Program1\lib
PROTOC_BIN=C:\Program1\bin
# OFFICE
#PROTOC_INC=C:\Program Files (x86)\include
#PROTOC_LIB=C:\Program Files (x86)\lib
#PROTOC_BIN=C:\Program Files (x86)\bin

## Quick and dirty
LDLIBPATH=/LIBPATH:"$(PROTOC_LIB)"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Users\Hechuan\Documents\GitHub\comdb2\cdb2api"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Tools\MSVC\14.10.25017\lib\onecore\x64"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.15063.0\um\x64"
LDLIBPATH=$(LDLIBPATH) /LIBPATH:"C:\Program Files (x86)\Windows Kits\10\Lib\10.0.15063.0\ucrt\x64"

!IF "$(CDB2API_INC)" == ""
CDB2API_INC=../../cdb2api
!ENDIF

!IF "$(CDB2API_LIB)" == ""
CDB2API_LIB=../../cdb2api
!ENDIF

!IF "$(CONFIG)" == ""
CONFIG=Release
CFLAGS_CFG=/MT /O2 /W4 /wd4100 /wd4127 /wd4201
!ELSE
CFLAG_CFG=/MTd /Zi /Od /W4 /wd4127 /wd4201
CFLAGS_CFG=/MTd /Zi /Od /W4 /wd4127 /wd4201 /Fd"cdb2odbc_src" /FD
LDFLAGS_CFG=/debug
!ENDIF

CFLAGS_INC=/I"$(CDB2API_INC)"
CFLAGS_DEF=

CC=cl.exe
CFLAGS=/nologo $(CFLAG_CFG) $(CFLAGS_INC) $(CFLAGS_DEF) /c

DLL=cdb2odbc.dll
LD=link.exe /DLL
LDLIBS=kernel32.lib user32.lib gdi32.lib uuid.lib odbc32.lib odbccp32.lib libcdb2api.a protobuf-c.lib wsock32.lib ws2_32.lib libcmt.lib /nodefaultlib:msvcrt.lib
# Uncomment the line below for backward compatibility
DOWNLEVEL=WindowsApp_downlevel.lib OneCore_downlevel.lib mincore_downlevel.lib
LDLIBS=$(LDLIBS) $(DOWNLEVEL)

!IFNDEF MSVC_VER
MSVC_VER=1900
!ENDIF
!IF $(MSVC_VER) >= 1900
LDLIBS=$(LDLIBS) legacy_stdio_definitions.lib
!ENDIF

LDFLAGS=$(LDFLAGS) $(LDLIBS) $(LDLIBPATH) $(LDFLAGS_CFG)

LIB=cdb2odbc.a
AR=lib.exe
ARFLAGS=

OBJECTS=attr.obj        \
	    connect.obj     \
	    convert.obj     \
	    error.obj       \
	    execute.obj     \
	    handle.obj      \
	    meta.obj        \
	    result.obj      \
	    setup.obj       \
	    util.obj

.c.obj::
	$(CC) @<<
	$(CFLAGS) $< 
<<

ALL: "$(DLL)" "$(LIB)"

.PHONY: ALL CLEAN

"$(DLL)": $(OBJECTS)
	$(LD) @<<
	$(LDFLAGS) $(OBJECTS) /def:$*.def /implib:$*.lib /out:$@
<<
	
"$(LIB)": $(OBJECTS)
	$(AR) @<<
	$(ARFLAGS) $(OBJECTS) /out:$@
<<

CLEAN:
	-@ERASE /Q *.obj
	-@ERASE /Q *.dll
	-@ERASE /Q *.lib
	-@ERASE /Q *.exp
	-@ERASE /Q *.exe
	-@ERASE /Q *.idb
	-@ERASE /Q *.pdb
	-@ERASE /Q *.a
